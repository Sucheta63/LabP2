n = int(input("enter the value of n: "))
board = [[0 for i in range(n)]for i in range(n)]

def check_column(board,row,column):
    for i in range(row,-1,-1):
        if board[i][column]==1:
            return False
    return True

def check_diagonal(board,row,column):
    for i,j in zip(range(row,-1,-1),range(column,-1,-1)):
        if board[i][j]==1:
            return False
    for i,j in zip(range(row,-1,-1),range(column,n)):
        if board[i][j]==1:
            return False
    return True

#backtracking
def nqn(borad,row):
    if row==n:
        return True
    for i in range(n):
        if(check_column(board,row,i)==True and check_diagonal(board,row,i)==True):
            board[row][i]=1
            if nqn(board,row+1):
                return True
            board[row][i]=0
    return False

nqn(board,0)

for row in board:
    print(row)
    
    #analysis 
    - N- queen problem :
	- given n*n chessboard , place n queens on board ,such that no two queens attack each other 
	- for a 4*4 board the following are the positions of queens where no 2 queens attack each other 
	- 0010
	- 1000
	- 0001
	- 0100
- 0 shows no queen , 1 shows queen 
	- no queen along the diagonal , in the row , in the column 
- approach : 
	- i want to check if i can place queen at row 4 and col 4 
		- need to check if there is any queen in diagonal, row 4 , col 4
		- 1) row is fixed - we traverse along col 
		- 2) row -- , col --  (upper diagonal) 
		- 3) row++, col-- (lower diagonal) 
